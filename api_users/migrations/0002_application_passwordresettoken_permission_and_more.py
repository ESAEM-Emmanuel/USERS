# Generated by Django 5.1.3 on 2024-12-05 14:27

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('api_users', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('application_name', models.CharField(help_text='Name of the application, used for identification (must be unique).', max_length=255, unique=True)),
                ('description', models.TextField(blank=True, help_text="Detailed description of the application's purpose or functionality.", max_length=255, null=True)),
                ('url', models.URLField(help_text='URL to access or locate the application (mandatory).', max_length=255, unique=True)),
                ('is_active', models.BooleanField(default=True, help_text='Indicates whether the application is active (True) or inactive (False).')),
                ('date_created', models.DateTimeField(auto_now_add=True, help_text='The date and time when the application was created.')),
                ('date_modified', models.DateTimeField(auto_now=True, help_text='The date and time when the application was last updated.')),
                ('image', models.CharField(blank=True, help_text='Optional field for storing an image reference for the application.', max_length=100, null=True)),
                ('created_by', models.ForeignKey(help_text='The user who created this application (non-nullable).', on_delete=django.db.models.deletion.CASCADE, related_name='app_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, help_text='The user who last updated this application (nullable).', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='app_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Application',
                'verbose_name_plural': 'Applications',
                'ordering': ['date_created'],
            },
        ),
        migrations.CreateModel(
            name='PasswordResetToken',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('token', models.CharField(max_length=255, unique=True)),
                ('expiration', models.DateTimeField()),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='password_reset_token_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Password Reset Token',
                'verbose_name_plural': 'Password Reset Tokens',
            },
        ),
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('permission_name', models.CharField(help_text='Unique name for the permission, allowing only alphanumeric characters, dashes, and underscores.', max_length=100, unique=True)),
                ('is_active', models.BooleanField(default=True, help_text='Indicates whether the permission is active (True) or inactive (False).')),
                ('description', models.TextField(help_text="A detailed description of the permission's purpose and scope.", max_length=255)),
                ('date_created', models.DateTimeField(auto_now_add=True, help_text='The date and time when the permission was created.')),
                ('date_updated', models.DateTimeField(auto_now=True, help_text='The date and time when the permission was last updated.')),
                ('created_by', models.ForeignKey(help_text='The user who created this permission.', on_delete=django.db.models.deletion.CASCADE, related_name='permission_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, help_text='The user who last updated this permission.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='permission_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Permission',
                'verbose_name_plural': 'Permissions',
                'ordering': ['date_created'],
            },
        ),
        migrations.CreateModel(
            name='AssignPermissionToUser',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for each permission assignment.', primary_key=True, serialize=False)),
                ('date_assigned', models.DateTimeField(auto_now_add=True, help_text='The date and time when the permission was assigned.')),
                ('assigned_by', models.ForeignKey(help_text='The user who assigned the permission (must exist in the user table).', on_delete=django.db.models.deletion.CASCADE, related_name='permissions_user_assigned_by', to=settings.AUTH_USER_MODEL)),
                ('user_id', models.ForeignKey(help_text='The user to whom the permission is assigned (must exist in the user table).', on_delete=django.db.models.deletion.CASCADE, related_name='user_recipiant', to=settings.AUTH_USER_MODEL)),
                ('permission_id', models.ForeignKey(help_text='The permission assigned to the user (must exist in the permission table).', on_delete=django.db.models.deletion.CASCADE, related_name='permission_attached_to_user', to='api_users.permission')),
            ],
            options={
                'verbose_name': 'Assign Permission to User',
                'verbose_name_plural': 'Assign Permissions to Users',
                'ordering': ['-date_assigned'],
            },
        ),
        migrations.CreateModel(
            name='AssignPermissionApplication',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for each permission assignment.', primary_key=True, serialize=False)),
                ('date_assigned', models.DateTimeField(auto_now_add=True, help_text='The date and time when the permission was assigned.')),
                ('application_id', models.ForeignKey(help_text='The application to which the permission is assigned (must exist in the application table).', on_delete=django.db.models.deletion.CASCADE, related_name='application_recipiant_permission', to='api_users.application')),
                ('assigned_by', models.ForeignKey(help_text='The user or administrator who assigned the permission (must exist in the user table).', on_delete=django.db.models.deletion.CASCADE, related_name='permissions_app_assigned_by', to=settings.AUTH_USER_MODEL)),
                ('permission_id', models.ForeignKey(help_text='The permission assigned to the application (must exist in the permission table).', on_delete=django.db.models.deletion.CASCADE, related_name='application_app_attached', to='api_users.permission')),
            ],
            options={
                'verbose_name': 'Assign Application Permission',
                'verbose_name_plural': 'Assign Application Permissions',
                'ordering': ['-date_assigned'],
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('role_name', models.CharField(help_text='Unique name of the role, allowing only alphanumeric characters, dashes, and underscores.', max_length=100, unique=True)),
                ('description', models.TextField(blank=True, help_text="Detailed description of the role's responsibilities and privileges.", max_length=255, null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Indicates whether the role is active (true) or inactive (false).')),
                ('date_created', models.DateTimeField(auto_now_add=True, help_text='Timestamp indicating when the role was created.')),
                ('date_updated', models.DateTimeField(auto_now=True, help_text='Timestamp indicating the last time the role was updated.')),
                ('created_by', models.ForeignKey(help_text='User who created this role.', on_delete=django.db.models.deletion.CASCADE, related_name='role_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last updated this role.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='role_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Role',
                'verbose_name_plural': 'Roles',
                'ordering': ['date_created'],
            },
        ),
        migrations.CreateModel(
            name='AssignRoleToUser',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for each role assignment.', primary_key=True, serialize=False)),
                ('date_assigned', models.DateTimeField(auto_now_add=True, help_text='The date and time when the role was assigned.')),
                ('assigned_by', models.ForeignKey(help_text='The user or administrator who assigned the role (must exist in the user table).', on_delete=django.db.models.deletion.CASCADE, related_name='role_user_assigned_by', to=settings.AUTH_USER_MODEL)),
                ('user_id', models.ForeignKey(help_text='The user to whom the role is assigned (must exist in the user table).', on_delete=django.db.models.deletion.CASCADE, related_name='user_recipiant_role', to=settings.AUTH_USER_MODEL)),
                ('role_id', models.ForeignKey(help_text='The role assigned to the user (must exist in the role table).', on_delete=django.db.models.deletion.CASCADE, related_name='role_transmitted_user', to='api_users.role')),
            ],
            options={
                'verbose_name': 'Assign Role to User',
                'verbose_name_plural': 'Assign Roles to Users',
                'ordering': ['-date_assigned'],
            },
        ),
        migrations.CreateModel(
            name='AssignPermissionToRole',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for each role-permission assignment.', primary_key=True, serialize=False)),
                ('date_assigned', models.DateTimeField(auto_now_add=True, help_text='The date and time when the permission was assigned.')),
                ('assigned_by', models.ForeignKey(help_text='The user or administrator who assigned the permission (must exist in the User table).', on_delete=django.db.models.deletion.CASCADE, related_name='role_permission_assigned_by', to=settings.AUTH_USER_MODEL)),
                ('permission_id', models.ForeignKey(help_text='The permission assigned to the role (must exist in the Permission table).', on_delete=django.db.models.deletion.CASCADE, related_name='permission_attached_role', to='api_users.permission')),
                ('role_id', models.ForeignKey(help_text='The role to which the permission is assigned (must exist in the Role table).', on_delete=django.db.models.deletion.CASCADE, related_name='role_recipiant_permissions', to='api_users.role')),
            ],
            options={
                'verbose_name': 'Assign Permission Role',
                'verbose_name_plural': 'Assign Permissions Role',
                'ordering': ['-date_assigned'],
            },
        ),
    ]
